{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearButton","setState","name","this","className","type","onClick","map","good","isSelected","addButton","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,YAAc,WACZ,EAAKC,SAAS,CAAEF,aAAc,MANlC,+CASE,SAAUG,GACRC,KAAKF,SAAS,CAAEF,aAAcG,MAVlC,oBAaE,WAA2B,IAAD,OAChBH,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGL,EAAY,UACNA,EADM,gBAET,oBAEHA,GAEC,wBACE,UAAQ,cACRM,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKH,iBAKpB,uBAAOI,UAAU,QAAjB,SACE,gCACGR,EAAMW,KAAI,SAAAC,GACT,IAAMC,EAAaD,IAAST,EAE5B,OACE,qBAEE,UAAQ,OACRK,UACEK,EACI,+BACA,GANR,UASE,6BACE,wBACE,oBAAYA,EACR,eACA,aAEJJ,KAAK,SACLD,UAAS,iBAAYK,EAAa,UAAY,IAC9CH,QACEG,EACI,EAAKT,YACL,kBAAM,EAAKU,UAAUF,IAV7B,mBAaMC,EAAa,IAAM,SAI3B,oBAAI,UAAQ,YAAYL,UAAU,eAAlC,SACGI,MA3BEA,iBAzCvB,GAAyBG,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9a6af97.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface AppState {\n  selectedGood: string;\n}\n\nexport class App extends React.Component <{}, AppState> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  addButton(name:string) {\n    this.setState({ selectedGood: name });\n  }\n\n  render(): React.ReactNode {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? `${selectedGood} is selected`\n            : 'No goods selected'}\n\n          {selectedGood && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              onClick={this.clearButton}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => {\n              const isSelected = good === selectedGood;\n\n              return (\n                <tr\n                  key={good}\n                  data-cy=\"Good\"\n                  className={\n                    isSelected\n                      ? 'has-background-success-light'\n                      : ''\n                  }\n                >\n                  <td>\n                    <button\n                      data-cy={`${isSelected\n                        ? 'RemoveButton'\n                        : 'AddButton'\n                      }`}\n                      type=\"button\"\n                      className={`button ${isSelected ? 'is-info' : ''}`}\n                      onClick={\n                        isSelected\n                          ? this.clearButton\n                          : () => this.addButton(good)\n                      }\n                    >\n                      {`${isSelected ? '-' : '+'}`}\n                    </button>\n                  </td>\n\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}